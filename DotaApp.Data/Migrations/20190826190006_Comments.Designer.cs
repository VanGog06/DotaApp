// <auto-generated />
using System;
using DotaApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotaApp.Data.Migrations
{
    [DbContext(typeof(DotaAppContext))]
    [Migration("20190826190006_Comments")]
    partial class Comments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotaApp.Data.DbModels.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbilityName");

                    b.Property<string>("Behavior");

                    b.Property<string>("Cooldown");

                    b.Property<string>("DamageType");

                    b.Property<string>("Description");

                    b.Property<int>("HeroId");

                    b.Property<string>("Image");

                    b.Property<string>("ManaCost");

                    b.Property<string>("Pierce");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.AbilityAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AbilityId");

                    b.Property<bool>("Generated");

                    b.Property<string>("Header");

                    b.Property<string>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.ToTable("AbilityAttributes");
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentMessage")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("ItemId");

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AgilityGain");

                    b.Property<int>("AttackRange");

                    b.Property<double>("AttackRate");

                    b.Property<string>("AttackType");

                    b.Property<int>("BaseAgility");

                    b.Property<double>("BaseArmor");

                    b.Property<int>("BaseAttackMax");

                    b.Property<int>("BaseAttackMin");

                    b.Property<int>("BaseHealth");

                    b.Property<double?>("BaseHealthRegen");

                    b.Property<int>("BaseIntellect");

                    b.Property<int>("BaseMana");

                    b.Property<double>("BaseManaRegen");

                    b.Property<int>("BaseMr");

                    b.Property<int>("BaseStrength");

                    b.Property<string>("Icon");

                    b.Property<string>("Image");

                    b.Property<double>("IntellectGain");

                    b.Property<int>("Legs");

                    b.Property<int>("MoveSpeed");

                    b.Property<string>("Name");

                    b.Property<string>("PrimaryAttribute");

                    b.Property<int>("ProjectileSpeed");

                    b.Property<double>("StrengthGain");

                    b.Property<double>("TurnRate");

                    b.HasKey("Id");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.HeroRole", b =>
                {
                    b.Property<int>("HeroId");

                    b.Property<int>("RoleId");

                    b.HasKey("HeroId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("HeroRole");
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.IdentityRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("IdentityRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost");

                    b.Property<string>("Image");

                    b.Property<string>("Lore");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.ItemAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Footer");

                    b.Property<string>("Header");

                    b.Property<int>("ItemId");

                    b.Property<string>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemAttributes");
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@dota.app",
                            FirstName = "Admin",
                            LastName = "Admin",
                            PasswordHash = new byte[] { 97, 1, 22, 70, 8, 142, 212, 211, 169, 113, 162, 32, 11, 215, 54, 174, 184, 30, 42, 85, 112, 244, 225, 65, 251, 165, 108, 118, 59, 214, 174, 221, 167, 142, 93, 115, 36, 239, 14, 199, 6, 21, 187, 174, 179, 231, 184, 142, 114, 124, 149, 91, 170, 69, 34, 21, 83, 76, 129, 204, 195, 174, 145, 151 },
                            PasswordSalt = new byte[] { 123, 133, 80, 97, 41, 218, 218, 243, 99, 169, 147, 77, 249, 109, 38, 129, 89, 159, 89, 127, 207, 47, 123, 32, 17, 143, 32, 174, 54, 200, 64, 225, 148, 144, 143, 43, 229, 104, 173, 175, 125, 170, 8, 103, 250, 237, 3, 247, 68, 135, 40, 7, 38, 199, 113, 23, 94, 153, 35, 158, 52, 107, 204, 44, 176, 179, 239, 155, 246, 12, 95, 11, 116, 41, 96, 157, 83, 94, 154, 199, 244, 149, 109, 179, 98, 223, 174, 85, 12, 160, 152, 19, 222, 99, 231, 87, 62, 95, 112, 220, 122, 137, 118, 1, 170, 45, 233, 5, 112, 215, 34, 92, 22, 177, 90, 183, 183, 181, 251, 82, 207, 170, 169, 146, 15, 13, 155, 63 },
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.Ability", b =>
                {
                    b.HasOne("DotaApp.Data.DbModels.Hero", "Hero")
                        .WithMany("Abilities")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.AbilityAttribute", b =>
                {
                    b.HasOne("DotaApp.Data.DbModels.Ability", "Ability")
                        .WithMany("AbilityAttributes")
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.Comment", b =>
                {
                    b.HasOne("DotaApp.Data.DbModels.Item", "Item")
                        .WithMany("Comments")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.HeroRole", b =>
                {
                    b.HasOne("DotaApp.Data.DbModels.Hero", "Hero")
                        .WithMany("Roles")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DotaApp.Data.DbModels.Role", "Role")
                        .WithMany("Heroes")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.ItemAttribute", b =>
                {
                    b.HasOne("DotaApp.Data.DbModels.Item", "Item")
                        .WithMany("ItemAttributes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DotaApp.Data.DbModels.UserRole", b =>
                {
                    b.HasOne("DotaApp.Data.DbModels.IdentityRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DotaApp.Data.DbModels.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
